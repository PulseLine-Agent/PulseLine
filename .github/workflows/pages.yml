name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env from secrets
        run: |
          # These map repository secrets into a .env file so Configs/config.py can load them via dotenv
          # Ensure you add these secrets in your repo settings before running this workflow
          cat > .env << 'EOF'
          GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          MODEL_NAME=${{ secrets.MODEL_NAME }}
          USER=${{ secrets.USER }}
          PASSWORD=${{ secrets.PASSWORD }}
          DATABASE=${{ secrets.DATABASE }}
          HOST=${{ secrets.HOST }}
          EOF

      - name: Sanity check config import
        run: |
          python - << 'PY'
          from Configs.config import GROQ_API_KEY, OPENAI_API_KEY, MODEL_NAME, USER, PASSWORD, DATABASE, HOST
          assert GROQ_API_KEY is not None, 'GROQ_API_KEY missing'
          assert OPENAI_API_KEY is not None, 'OPENAI_API_KEY missing'
          print('Configs loaded successfully')
          PY

      - name: Optional short server run (10s)
        if: ${{ always() }}
        env:
          # If your Configs/config.py uses HOST for the app bind address, set it to 0.0.0.0 to avoid bind errors
          HOST: 0.0.0.0
        run: |
          # GitHub Pages cannot host a Python server; this is only a brief validation
          timeout 10s python server.py || true

      - name: Prepare static site for Pages
        run: |
          mkdir -p public
          cp -r static public/static
          if [ -f Templates/index.html ]; then
            cp Templates/index.html public/index.html
          elif [ -f templates/index.html ]; then
            cp templates/index.html public/index.html
          else
            echo "index.html not found under Templates/ or templates/" >&2
            exit 1
          fi
          touch public/.nojekyll
          # Make static asset paths relative for repository Pages (avoid absolute /static path)
          sed -i 's|/static/|static/|g' public/index.html

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


